/**
* NameScore API
* Name Calculation Engine
*
* OpenAPI spec version: 1.0
* Contact: dshrader38@gmail.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.apis

import io.swagger.client.models._200

import io.swagger.client.infrastructure.*

class DefaultApi(basePath: kotlin.String = "https://localhost:8080/shrader/name-score") : ApiClient(basePath) {

    /**
    * Add two integers
    * This function will add two integers and retuen an integer result\&quot;
    * @param lhs Left hand side 
    * @param rhs Right hand side 
    * @return _200
    */
    @Suppress("UNCHECKED_CAST")
    fun currentWeatherData(lhs: kotlin.Long, rhs: kotlin.Long) : _200 {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: MultiValueMap = mapOf("lhs" to listOf("$lhs"), "rhs" to listOf("$rhs"))
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/add",
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<_200>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as _200
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

}
